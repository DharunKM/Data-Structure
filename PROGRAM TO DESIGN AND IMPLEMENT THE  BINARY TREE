class Node:
 def __init__(self, val):
 self.val = val
 self.left = self.right = None
class Tree:
 def __init__(self):
 self.root = None
 def add(self, val):
 if not self.root:
 self.root = Node(val)
 else:
 self._add_node(self.root, val)
 def _add_node(self, node, val):
 if node.left is None:
 node.left = Node(val)
 elif node.right is None:
 node.right = Node(val)
 else:
 self._add_node(node.left, val) if node.left else 
self._add_node(node.right, val)
 def show(self, node, lvl=0):
 if node:
 self.show(node.right, lvl + 1)
 print(' ' * 4 * lvl + '->', node.val)
 self.show(node.left, lvl + 1)
t = Tree()
for v in [7, 5, 4, 3, 2, 1]:
 t.add(v)
print("Constructed Tree:")
t.show(t.root)
